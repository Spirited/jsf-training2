<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.kompanets.jsf</groupId>
  <artifactId>jsf-training2</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <properties>
      <!--
         Explicitly declaring the source encoding eliminates the following message:
         [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
      -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <!--
         To set the jboss.home environment variable the Maven way, set the jboss.home property in an active profile in
         the Maven 2 settings.xml file
      -->
      <jboss.home>E:\Spirited\Developing\Jboss_Installed\wildfly-10.0.0.Final-JSF_training</jboss.home>
      <jboss.domain>default</jboss.domain>
      <!-- The version of Weld extensions in use -->
      <weld.extensions.version>1.0.0-CR2</weld.extensions.version>
   </properties>

   <repositories>
       <!-- Several key Java EE APIs and RIs are missing from the Maven Central Repository -->
       <!-- The goal is to eventually eliminate the reliance on the JBoss repository -->
       <repository>
          <id>repository.jboss.org</id>
          <name>JBoss Repository</name>
          <url>http://repository.jboss.org/maven2</url>
       </repository>
   </repositories>

   <dependencyManagement>
      <dependencies>
         <!-- Import scope will provide versions for dependencies below. -->
         <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-extensions-bom</artifactId>
            <version>${weld.extensions.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>
   
   <dependencies>
      <!-- CDI (JSR-299) -->
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <!-- EJB -->
      <dependency>
         <groupId>org.jboss.ejb3</groupId>
         <artifactId>jboss-ejb3-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <!-- Common annotations (e.g., @PostConstruct, @PreDestroy, @Generated, @Resource) -->
      <dependency>
         <groupId>javax.annotation</groupId>
         <artifactId>jsr250-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <!-- Bean Validation (JSR-303) -->
      <dependency>
         <groupId>javax.validation</groupId>
         <artifactId>validation-api</artifactId>
         <version>1.1.0.Final</version><!--$NO-MVN-MAN-VER$-->
         <scope>provided</scope>
      </dependency>
      <!-- Bean Validation Implementation -->
      <!-- Provides portable constraints such as @NotEmpty, @Email and @Url -->
      <!-- Hibernate Validator is only the JSR-303 implementation at the moment, so we can assume it's provided -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator</artifactId>
         <version>5.4.1.Final</version>
         <scope>provided</scope>
      </dependency>
      <!-- JSF -->
      <dependency>
         <groupId>javax.faces</groupId>
         <artifactId>jsf-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <!-- JPA -->
      <dependency>
         <groupId>javax.persistence</groupId>
         <artifactId>persistence-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Needed on JBoss AS as EL is out of date -->
      <dependency>
         <groupId>org.glassfish.web</groupId>
         <artifactId>el-impl</artifactId>
         <scope>runtime</scope>
         <!-- FIXME this version should be in the Weld API BOM -->
         
         <exclusions>
            <exclusion>
               <groupId>javax.el</groupId>
               <artifactId>el-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
   </dependencies>
   <build>
      <finalName>${artifactId}</finalName>
      <plugins>
         <!-- Compiler plugin enforces Java 1.6 compatiblity -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
         </plugin>

         <!-- Eclipse plugin can force download of source and JavaDoc jars -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <configuration>
               <wtpversion>2.0</wtpversion>
               
               <downloadSources>true</downloadSources>
               <downloadJavadocs>true</downloadJavadocs>
               
            </configuration>
         </plugin>

         <!-- Configure the JBoss AS Maven deploy plugin -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>jboss-maven-plugin</artifactId>
            <configuration>
               <jbossHome>${jboss.home}</jbossHome>
               <serverName>${jboss.domain}</serverName>
               <fileNames>
                  <fileName>${project.build.directory}/${build.finalName}.war</fileName>
               </fileNames> 
            </configuration>
         </plugin>
      </plugins>
   </build>
   
   <profiles>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-ear-plugin</artifactId>
                        <version>7</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                        </configuration>
                    </plugin>
                    <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                   	<executions>
                   		<execution>
                   			<phase>install</phase>
                   			<goals>
                   				<goal>deploy</goal>
                   			</goals>
                   		</execution>
                   	</executions>
                    <configuration>
                        <!--<protocol>https-remoting</protocol>-->
                        <hostname>localhost</hostname>
                        <port>9990</port>
                        <username>admin</username>
                        <password>admin1</password>
                    </configuration>
                </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
   
</project>